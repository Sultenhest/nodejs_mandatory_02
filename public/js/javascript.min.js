!function(e){"use strict";function t(t){t.forEach(function(t){e("#frontPagePosts").append(a(t))})}function a(e){var t='<div class="card fadeInUp pointer" data-id="'+e._id+'">';return t+='<div class="card-header">',t+='<i class="fa fa-angle-right fa-3x" aria-hidden="true"></i>',t+="<h3>"+e.title+"</h3>",t+='<p class="secondary">'+r(e._id)+"</p>",t+="</div>",t+="</div>"}function n(e){var t='<div class="card">';return t+='<div class="card-header">',t+="<h3>"+e.title+"</h3>",null!=e._id&&(t+='<p class="secondary">'+r(e._id)+"</p>"),t+="</div>",t+='<div class="card-body">',t+="<p>"+e.body+"</p>",t+="</div>",null!=e._id&&(t+='<div class="card-footer">',t+='<a href="/updatepost?id='+e._id+'" class="btn btn-success">Edit</a>',t+='<a href="/removepost?id='+e._id+'" class="btn btn-danger">Delete</a>',t+="</div>"),t+="</div>"}function r(e){var t=new Date(1e3*parseInt(e.substring(0,8),16)),a=["January","February","March","April","May","June","July","August","September","October","November","December"][t.getMonth()]+" ";return a+=t.getDate()+" ",a+=t.getFullYear()+", ",a+=i(t.getHours())+":",a+=i(t.getMinutes())+":",a+=i(t.getSeconds())}function i(e){return 1==e.toString().length&&(e="0"+e),e}var o="";e.getJSON(e(location).attr("href")+"posts/",function(a){o=a,e("#loader").parent().hide(),t(o)}).fail(function(){e("#loader").parent().hide();e("#frontPagePosts").append(n({title:"Sorry, we did not find anything..",body:"Contact somebody if this keeps on happening.."}))});e(document).ready(function(){e("#frontPagePosts").on("click",".card",function(){e("#overlay-container").empty();var t=e(this).attr("data-id");e("#overlay").show();e("#overlay-container").append(n({title:"Fetching Data",body:'<img src="imgs/loader.gif" alt="Loading..." id="loader">'})),e.getJSON(e(location).attr("href")+"posts/"+t,function(t){e("#overlay-container").empty(),e("#overlay-container").append(n(t))})}),e("#overlay").click(function(){e("#overlay-container").empty(),e(this).hide()}),e("#search-field").keyup(function(){e("#clear-search-field").removeClass("disabled"),e("#frontPagePosts").empty(),e("#clear-search-field").click(function(){e(this).addClass("disabled"),e("#search-field").val(""),e("#frontPagePosts").empty(),t(o)});var r=e(this).val().toLowerCase();if(""==r&&e("#clear-search-field").addClass("disabled"),o.forEach(function(t){(t.title.toLowerCase().indexOf(r)>=0||t.body.toLowerCase().indexOf(r)>=0)&&e("#frontPagePosts").append(a(t))}),e("#frontPagePosts").is(":empty")){var i={title:"No results.",body:"Sorry, but we couldn't find anything matching the search string \""+r+'".'};e("#frontPagePosts").append(n(i))}})})}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
