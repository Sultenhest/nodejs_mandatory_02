function getUrlParameter(e){var a,t,d=decodeURIComponent(window.location.search.substring(1)).split("&");for(t=0;t<d.length;t++)if((a=d[t].split("="))[0]===e)return void 0===a[1]||a[1]}function initMap(){var e={lat:55.70394599999999,lng:12.53749300000004},a=new google.maps.Map(document.getElementById("map"),{zoom:10,center:e});new google.maps.Marker({position:e,map:a})}function createDeck(e){e.forEach(function(e){$("#main-deck").append(cardNoBody(e))})}function cardNoBody(e){var a='<div class="card fadeInUp pointer clickable" data-id="'+e._id+'">';return a+='<div class="card-header">',a+='<i class="fa fa-angle-right fa-3x" aria-hidden="true"></i>',a+="<h3>"+e.title+"</h3>",a+='<p class="secondary">'+dateFromObjectId(e._id)+"</p>",a+="</div>",a+="</div>"}function cardWithBody(e){var a='<div class="card">';return a+='<div class="card-header">',a+="<h3>"+e.title+"</h3>",null!=e._id&&(a+='<p class="secondary">'+dateFromObjectId(e._id)+"</p>"),a+="</div>",a+='<div class="card-body">',a+="<p>"+e.body+"</p>",a+="</div>",null!=e._id&&(a+='<div class="card-footer">',a+='<a href="/form?id='+e._id+'&type=update" class="btn btn-success">',a+='<i class="fa fa-pencil" aria-hidden="true"></i> Edit',a+="</a>",a+='<a href="/posts/'+e._id+'" class="btn btn-warning">',a+='<i class="fa fa-file-o" aria-hidden="true"></i> JSON',a+="</a>",a+='<a href="/form?id='+e._id+'&type=delete" class="btn btn-danger">',a+='<i class="fa fa-trash-o" aria-hidden="true"></i> Delete',a+="</a>",a+="</div>"),a+="</div>"}function dateFromObjectId(e){var a=new Date(1e3*parseInt(e.substring(0,8),16)),t=["January","February","March","April","May","June","July","August","September","October","November","December"][a.getMonth()]+" ";return t+=a.getDate()+" ",t+=a.getFullYear()+", ",t+=addLeadingZero(a.getHours())+":",t+=addLeadingZero(a.getMinutes())+":",t+=addLeadingZero(a.getSeconds())}function addLeadingZero(e){return 1==e.toString().length&&(e="0"+e),e}$(function(){var e=window.location.protocol+"//"+window.location.host,a=top.location.pathname,t="",d={title:"Sorry, we did not find anything..",body:"Contact somebody if this keeps on happening.."},i={title:"Fetching Data",body:'<img src="imgs/loader.gif" alt="Loading..." id="loader">'},r={title:"No results.",body:'Sorry, but we couldn\'t find anything matching the search string.<br>Press the <i class="fa fa-times" aria-hidden="true"></i> or type something else.'};if("/"===a)$.getJSON(e+"/posts/",function(e){createDeck(t=e)}).fail(function(){$("#main-deck").append(cardWithBody(d))}).always(function(){$("#loader").parent().hide()});else if("/form"===a){var o=getUrlParameter("id"),n=getUrlParameter("type");$("#form").hide(),"update"===n?($("#form-header").prepend("Update "),$("#form-sub-header").text("Update the following post"),$("#form").attr("action","/posts/"+o+"?_method=put")):"delete"===n?($("#form-header").prepend("Delete "),$("#form-sub-header").text("Are you sure you want to delete the following post?"),$("#form").attr("action","/posts/"+o+"?_method=delete")):($("#form-header").prepend("Create "),$("#form-sub-header").text("Create a new post"),$("#form").attr("action","/posts")),null!=o&&$.getJSON(e+"/posts/"+o,function(e){$("#title").val(e.title),$("#body").val(e.body),"update"===n?$("#submit").attr("value","Edit"):"delete"===n&&($("#title, #body").prop("disabled",!0),$("#submit").removeClass("btn-success").addClass("btn-danger").attr("value","Delete"))}),$("#loader").hide(),$("#form").show()}$("#main-deck").on("click",".clickable",function(){var a=$(this).attr("data-id");$(".modal").empty().append(cardWithBody(i)),$("#modal-overlay").show(),$.getJSON(e+"/posts/"+a,function(e){$(".modal").empty().append(cardWithBody(e))}),$(".modal-close").click(function(){$("#modal-overlay").hide()})}),$("#search-field").keyup(function(){var e=$(this).val().toLowerCase();$("#clear-search-field").removeClass("disabled"),$("#main-deck").empty(),t.forEach(function(a){a.title.toLowerCase().indexOf(e)>=0&&$("#main-deck").append(cardNoBody(a))}),$("#main-deck").is(":empty")&&$("#main-deck").append(cardWithBody(r)),$("#clear-search-field").click(function(){$(this).addClass("disabled"),$("#search-field").val(""),$("#main-deck").empty(),createDeck(t)}),""==e&&$("#clear-search-field").addClass("disabled")})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
